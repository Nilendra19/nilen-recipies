Introduction to Activities
The Activity class is a crucial component of an Android app, and the way activities are launched and put together is a fundamental part of the 
platform's application model. Unlike programming paradigms in which apps are launched with a main() method, the Android system initiates code in 
an Activity instance by invoking specific callback methods that correspond to specific stages of its lifecycle.

This document introduces the concept of activities, and then provides some lightweight guidance about how to work with them. 
For additional information about best practices in architecting your app, see Guide to App Architecture.

The concept of activities
The mobile-app experience differs from its desktop counterpart in that a user's interaction with the app doesn't always begin 
in the same place. Instead, the user journey often begins non-deterministically. For instance, if you open an email app from your home screen, 
you might see a list of emails. By contrast, if you are using a social media app that then launches your email app, you might go directly to
 the email app's screen for composing an email.

The Activity class is designed to facilitate this paradigm. When one app invokes another, the calling app invokes an activity in the other app,
 rather than the app as an atomic whole. In this way, the activity serves as the entry point for an app's interaction with the user. You implement 
 an activity as a subclass of the Activity class.